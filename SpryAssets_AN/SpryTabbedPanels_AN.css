@charset "UTF-8";

/* SpryTabbedPanels.css - version 0.6 - Spry Pre-Release 1.6.1 */

/* Copyright (c) 2006. Adobe Systems Incorporated. All rights reserved. */

/* Horizontal Tabbed Panels
 *
 * The default style for a TabbedPanels widget places all tab buttons
 * (left aligned) above the content panel.
 */

/* This is the selector for the main TabbedPanels container. For our
 * default style, this container does not contribute anything visually,
 * but it is floated left to make sure that any floating or clearing done
 * with any of its child elements are contained completely within the
 * TabbedPanels container, to minimize any impact or undesireable
 * interaction with other floated elements on the page that may be used
 * for layout.
 *
 * If you want to constrain the width of the TabbedPanels widget, set a
 * width on the TabbedPanels container. By default, the TabbedPanels widget
 * expands horizontally to fill up available space.
 *
 * The name of the class ("TabbedPanels") used in this selector is not
 * necessary to make the widget function. You can use any class name you
 * want to style the TabbedPanels container.
 */
.TabbedPanels {
	overflow: visible;
	padding: 0px;
	clear: none;
	width: 278px; /* IE Hack to force proper layout when preceded by a paragraph. (hasLayout Bug)*/
	height: auto;
	float: left;
	background-color: #FFF;
	border: 1px solid #E0E0E0;
	border-top-left-radius: 10px;
	border-top-right-radius:10px;
	margin-top: 0px;
	margin-right: 0px;
	margin-bottom: 20px;
	margin-left: 0px;
}

/* This is the selector for the TabGroup. The TabGroup container houses
 * all of the tab buttons for each tabbed panel in the widget. This container
 * does not contribute anything visually to the look of the widget for our
 * default style.
 *
 * The name of the class ("TabbedPanelsTabGroup") used in this selector is not
 * necessary to make the widget function. You can use any class name you
 * want to style the TabGroup container.
 */
.TabbedPanelsTabGroup {
	padding: 0px;
	margin: 0px;
}

/* This is the selector for the TabbedPanelsTab. This container houses
 * the title for the panel. This is also the tab "button" that the user clicks
 * on to activate the corresponding content panel so that it appears on top
 * of the other tabbed panels contained in the widget.
 *
 * For our default style, each tab is positioned relatively 1 pixel down from
 * where it wold normally render. This allows each tab to overlap the content
 * panel that renders below it. Each tab is rendered with a 1 pixel bottom
 * border that has a color that matches the top border of the current content
 * panel. This gives the appearance that the tab is being drawn behind the
 * content panel.
 *
 * The name of the class ("TabbedPanelsTab") used in this selector is not
 * necessary to make the widget function. You can use any class name you want
 * to style this tab container.
 */
.TabbedPanelsTab {
	position: relative;
	top: 1px;
	float: left;
	list-style: none;
	-moz-user-select: none;
	-khtml-user-select: none;
	cursor: pointer;
	margin-top: 0px;
	margin-right: 1px;
	margin-bottom: 0px;
	margin-left: 0px;
	padding-top: 4px;
	padding-right: 10px;
	padding-bottom: 4px;
	padding-left: 10px;
	font-family: Tahoma, Geneva, sans-serif;
	font-size: 14px;
	font-weight: bold;
	width: 90px;
	background-color: #E6E6E6;
	color: #000;
}

/* This selector is an example of how to change the appearnce of a tab button
 * container as the mouse enters it. The class "TabbedPanelsTabHover" is
 * programatically added and removed from the tab element as the mouse enters
 * and exits the container.
 */
.TabbedPanelsTabHover {

}

/* This selector is an example of how to change the appearance of a tab button
 * container after the user has clicked on it to activate a content panel.
 * The class "TabbedPanelsTabSelected" is programatically added and removed
 * from the tab element as the user clicks on the tab button containers in
 * the widget.
 *
 * As mentioned above, for our default style, tab buttons are positioned
 * 1 pixel down from where it would normally render. When the tab button is
 * selected, we change its bottom border to match the background color of the
 * content panel so that it looks like the tab is part of the content panel.
 */
.TabbedPanelsTabSelected {
	background-color: #C30;
	width: 93px;
}

/* This selector is an example of how to make a link inside of a tab button
 * look like normal text. Users may want to use links inside of a tab button
 * so that when it gets focus, the text *inside* the tab button gets a focus
 * ring around it, instead of the focus ring around the entire tab.
 */
.TabbedPanelsTab a {
	color: black;
	text-decoration: none;
}

/* This is the selector for the ContentGroup. The ContentGroup container houses
 * all of the content panels for each tabbed panel in the widget. For our
 * default style, this container provides the background color and borders that
 * surround the content.
 *
 * The name of the class ("TabbedPanelsContentGroup") used in this selector is
 * not necessary to make the widget function. You can use any class name you
 * want to style the ContentGroup container.
 */
.TabbedPanelsContentGroup {
	clear: both;
	overflow: visible;
	background-color: #000;
}

/* This is the selector for the Content panel. The Content panel holds the
 * content for a single tabbed panel. For our default style, this container
 * provides some padding, so that the content is not pushed up against the
 * widget borders.
 *
 * The name of the class ("TabbedPanelsContent") used in this selector is
 * not necessary to make the widget function. You can use any class name you
 * want to style the Content container.
 */
.TabbedPanelsContent {
	overflow: visible;
	padding: 4px;
	background-color: #FFF;
}

/* This selector is an example of how to change the appearnce of the currently
 * active container panel. The class "TabbedPanelsContentVisible" is
 * programatically added and removed from the content element as the panel
 * is activated/deactivated.
 */
.TabbedPanelsContentVisible {

}

/* Vertical Tabbed Panels
 *
 * The following rules override some of the default rules above so that the
 * TabbedPanels widget renders with its tab buttons along the left side of
 * the currently active content panel.
 *
 * With the rules defined below, the only change that will have to be made
 * to switch a horizontal tabbed panels widget to a vertical tabbed panels
 * widget, is to use the "VTabbedPanels" class on the top-level widget
 * container element, instead of "TabbedPanels".
 */

.VTabbedPanels {
	overflow: hidden;
	zoom: 1;
}

/* This selector floats the TabGroup so that the tab buttons it contains
 * render to the left of the active content panel. A border is drawn around
 * the group container to make it look like a list container.
 */
.VTabbedPanels .TabbedPanelsTabGroup {
	float: left;
	width: 10em;
	height: 20em;
	position: relative;
}

/* This selector disables the float property that is placed on each tab button
 * by the default TabbedPanelsTab selector rule above. It also draws a bottom
 * border for the tab. The tab button will get its left and right border from
 * the TabGroup, and its top border from the TabGroup or tab button above it.
 */
.VTabbedPanels .TabbedPanelsTab {
	float: none;
	margin: 0px;
	border-top: none;
	border-left: none;
	border-right: none;
}

/* This selector disables the float property that is placed on each tab button
 * by the default TabbedPanelsTab selector rule above. It also draws a bottom
 * border for the tab. The tab button will get its left and right border from
 * the TabGroup, and its top border from the TabGroup or tab button above it.
 */
.VTabbedPanels .TabbedPanelsTabSelected {

}

/* This selector floats the content panels for the widget so that they
 * render to the right of the tabbed buttons.
 */
.VTabbedPanels .TabbedPanelsContentGroup {
	clear: none;
	float: left;
	padding: 0px;
	width: 30em;
	height: 20em;
}

/* Styles for Printing */
@media print {
.TabbedPanels {
	overflow: visible !important;
}
.TabbedPanelsContentGroup {
	display: block !important;
	overflow: visible !important;
	height: auto !important;
}
.TabbedPanelsContent {
	overflow: hidden !important;
	display: block !important;
	clear:both !important;
}
.TabbedPanelsTab {
	 overflow: visible !important;
	 display: block !important;
	 clear:both !important;
}
}
#main #right #bxh #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible ul {
	margin: 0px;
	padding: 0px;
}
#main #right #bxh  #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible ul .first-item {
	margin: 0px;
	padding: 0px;
}
#main #right #bxh  #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible ul .first-item .des .rank.rank-01 {
	width: 20px;
	color:#000;
	font-size: 18px;
	bottom: 17px;
	float: left;
	margin-top: 5px;
	margin-right: 5px;
	margin-bottom: 0px;
	margin-left: 0px;
	display: block;
	text-align: center;
	line-height: 26px;
}
#main #right #bxh  #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible ul .first-item .des .song-name.ellipsis {
	display: block;
	padding: 0px;
	text-decoration: none;
	margin-top: 2px;
	margin-right: 2px;
	margin-bottom: 2px;
	margin-left: 30px;
}
#main #right #bxh #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible ul .first-item .des .song-name.ellipsis .txt-primary:hover {
	color:#06F;
}

#main #right #bxh  #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible ul .first-item .des .singer-name.ellipsis {
	display: block;
	margin-left: 30px;
	margin-top: 5px;
}

#main #right #bxh  #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible ul .first-item .des .singer-name.ellipsis .txt-info {
	text-decoration: none;
	color: #BEBEBE;
	font-size: 12px;
	font-family: Arial, Helvetica, sans-serif;
}
#main #right #bxh  #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible ul .first-item .des .singer-name.ellipsis .txt-info:hover {
	color:#06F;
}
#main #right #bxh  #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible ul li {
	position: relative;
	min-height: 41px;
	margin-top: 10px;
	padding-right: 10px;
	border-bottom-width: 1px;
	border-bottom-style: solid;
	border-bottom-color: #CCC;
	list-style-type: none;
}
#main #right #bxh  #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible ul li .rank.rank-02 {
	width: 20px;
	color:#000;
	font-size: 18px;
	bottom: 17px;
	float: left;
	margin-top: 10px;
	margin-right: 5px;
	margin-bottom: 0px;
	margin-left: 0px;
	display: block;
	text-align: center;
	line-height: 26px;
}
#main #right #bxh  #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible ul li .song-name.ellipsis {
	display: block;
	padding: 0px;
	text-decoration: none;
	margin-top: 2px;
	margin-right: 2px;
	margin-bottom: 2px;
	margin-left: 30px;
}

#main #right #bxh  #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible ul li .song-name.ellipsis .txt-primary {
	color: #000;
	text-decoration: none;
	font-size: 14px;
	font-family: Arial, Helvetica, sans-serif;
	font-weight:400;
}
#main #right #bxh  #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible ul li .song-name.ellipsis .txt-primary:hover {
	color: #06F;
	
}
#main #right #bxh  #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible ul li .singer-name.ellipsis {
	display: block;
	margin-left: 30px;
	margin-top: 5px;
}
#main #right #bxh  #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible ul li .singer-name.ellipsis .txt-info {
	color: #BEBEBE;
	text-decoration: none;
	font-size: 12px;
	font-family: Arial, Helvetica, sans-serif;
}
#main #right #bxh  #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible ul li .singer-name.ellipsis .txt-info:hover {
	color: #06F;
	
}
#main #right #bxh  #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible .ui-footer {
	height: 30px;
	width: 100%;
	padding: 0px;
	margin: 0px;
	overflow: hidden;
	border-bottom-width: 1px;
	border-bottom-style: solid;
	border-bottom-color: #333;
}
#main #right #bxh  #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible .ui-footer .pull-left {
	color: #06F;
	display: block;
	clear: right;
	float: left;
	margin-bottom: 10px;
	margin-left: 10px;
	text-decoration: none;
	margin-top: 5px;
}
#main #right #bxh  #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible .ui-footer .pull-right {
	color: #06F;
	display: block;
	clear: none;
	float: right;
	text-decoration: none;
	margin-top: 5px;
}
#main #right #bxh  #TabbedPanels1 .TabbedPanelsContentGroup .TabbedPanelsContent.TabbedPanelsContentVisible .ui-footer .pull-right .icon-play-all {
	background-image: url(../video/play.png);
	background-repeat: no-repeat;
	float: right;
	height: 20px;
	width: 20px;
}
